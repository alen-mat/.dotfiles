# example user config (see 'hg help config' for more info)
[hostfingerprint]

[ui]
# name and email, e.g.
# username = Jane Doe <jdoe@example.com>
username =
interface = curses
#clonebundles = false

# We recommend enabling tweakdefaults to get slight improvements to
# the UI over time. Make sure to set HGPLAIN in the environment when
# writing scripts!
# tweakdefaults = True
editor = vim
# (see 'hg help color' for details)
color = yes
merge =  meld #internal:fail
#verbose = True
logtemplate = {min}\n
# uncomment to disable command output pagination
# (see 'hg help pager' for details)
# paginate = never

[diff]
git=True

[merge-tools]
meld = path/to/meld
meld.priority = 1
meld.premerge = False
#meld.args = $base $local $other
vimdiff.executable = vim
vimdiff.args = -d $base $local $output $other +close +close
 
[merge-patterns]
#** = meld

[extensions]
# churn =
#win32text=
extdiff =
strip =
record =
hgext.convert =
progress = 
color = 
hgk = 
graphlog =
purge = 
#mercurial_keyring =path/to/mercurial_keyring.py
color =
pager =
rebase =
share =
progress =
#Use mq at discretion
#hgext.mq  =
#hg version 6 and up
#evolve =

[progress]
delay = 1.5

[pager]
pager = LESS='FSRX' less
ignore = version, help, update, serve, record
attend = annotate, cat, diff, export, glog, log, qdiff, status, show, hist

[extdiff]
cmd.vdiff = meld

[win32text]
warn=FALSE

[encode]
**=cleverencode:

[decode]
**=cleverdecode:

[color]
mode=terminfo
color.lightgray = 250
color.darkgray = 239
status.modified = darkgray bold lightgray_background

custom.yellow = yellow
custom.author = bold
custom.red = red
custom.green = green
#Custom colours
color.orange=202
color.lightyellow=191
color.darkorange=220
color.brightyellow=226

#Colours for each label
log.branch=cyan
log.summary=lightyellow
log.description=lightyellow
log.bookmark=green
log.tag=darkorange bold
log.activebookmark = green bold underline
log.node = white bold
log.node_merge = red bold white_background
log.rev = white bold

changeset.public=white bold
changeset.secret=blue bold
changeset.draft=brightyellow bold

desc.here=bold blue_background

[templatealias]
web_url = "https://cmsuite/product/code/{branch}/{node|short}/"
merge_parent = "{ifeq(count(parents),2,label('log.node_merge','{p2.branch}')) }"
isMerge = "{ifeq(count(parents),2,'[merge]') }"

sep = "{label('custom.yellow',':')}"

_rev = "{wcset}"
__date = "[{date|age}:{date|isodate}]"
_date = "{ifeq(count(parents),2,label('log.node_merge',__date),__date)}"
_node= "{label('log.node',node|short)}"
_branch = "{label('log.branch',branch)}"
_tags = "{label('log.tag',if(tags,'Tags : {tags}\n'))}"

_files_add="{file_adds % '  + {label('custom.green',file)}\n'}"
_files_del ="{file_dels % '  - {label('custom.red',file)}\n'}"
_files_mod ="{file_mods % '  ~ {label('custom.yellow',file)}\n'}"
_files_ = "{_files_del}{_files_add}{_files_mod}"

_desc_one_line = "{desc|firstline}"
_desc = "{splitlines(desc) % ' {line}\n'}"

wcset = '{label("changeset.{phase}",rev)}'
wuser = '{label("grep.user",author|user)}'
wdesc = '{label(ifcontains(rev, revset('parents()'), 'desc.here'),
              desc|firstline)}'
wtags = '{label("log.tag",if(tags,"[{tags}]"))}\n'
wbook = '{bookmarks % "{ifeq(bookmark, currentbookmark,
                             label('log.activebookmark', bookmark),
                             label('log.bookmark', bookmark))} "}'
wbrch = '{label("log.branch",
                 ifeq(branch, "default",
                      "",
                      branch))}'


[templates]

short={_rev}:{node}| {date|shortdate} | {wuser} @ {_branch}\n{wdesc}\n\n

medi={_date}{_rev}:{_node} {_branch}  {wuser} {merge_parent}\n url : {web_url}\n{showParents}{_tags}{_desc }{_files_}\n\n

min = '{wbrch} {wcset} {wuser} {wtags} {wbook}\n{_desc}\n'

annot = {file} {lines %'{rev}:{wuser}:{date|shortdate}\n{label('custom.yellow',index+1)}{sep}{sep}{line}'}
grp = '{path}:{rev}:{change}:{texts}\n'

[paths]
sdp=https://cmsuite

[alias]
#Invoking shell alias from hg
#pushbranch = !$HG push -b `$HG branch`
checkout = !$HG up $($HG branches | fzf | cut -d ' ' -f 1 ) 
_blame =annotate -l --user --number
origin = log -r $1 -b $2
par-branch = log -r "parents(min(branch(.)))"
show = log --color=always -pr
hist = log -T medi
last_merge = log -r last(ms2b("$1",".")) -T medi
foreign_parent = log -r last(fp_ms("$1",".")) -T medi

[revsetalias]
wip = (parents(not public()) or not public() or . or head()) and (not obsolete() or unstable()^) and not closed()
leftpad(s, w) = pad(s, w, ' ', True)
branchedFrom(b)= parents(min(branch(b)))

#https://stackoverflow.com/questions/56479038/mercurial-how-to-find-last-time-my-branch-was-merged-into-default
grafted(from, to) = destination(branch(from)) & branch(to)
ms(to) = merge() & branch(to)
ms2b(to,from) = children(p2(ms(to)) & branch(from)) & branch(to)

[hooks]
commit = echo "\n[COMMIT] $HG_NODE \n\n $(hg log -r$HG_NODE --template=medi)"
post-push= echo "Pushed"
#pretxncommit.crlf=python:hgext.win32text.forbidcrlf
#pretxncommit.codecheck=python:/path/to/wrapper.py:startChecks
#pre-commit =~/.config/mercurial/pre_commit.hook
#pre-update =
#post-update = 

[convert]
hg.saverev=false

[path]
conmans=https://cmsuite

[auth]
hg.schemes =
hg.prefix =
hg.username =
#unsafe to use password use keyring
hg.password =

[email]
#from = user@domain.com

[smtp]
#host = smtp.gmail.com
#username = user@gmail.com
#password = sure
#port = 587
#tls = true

[web]
#baseurl = http://dev/...

[notify]
#sources = serve push pull bundle
#test = False
#config = /path/to/subscription/file
#template = \ndetails:   {baseurl}{webroot}/rev/{node|short}\nchangeset: {rev}:{node|short}\nuser:      {author}\ndate:      {date|date}\ndescription:\n{desc}\n
#maxdiff = 300

[tortoisehg]
vdiff = meld 
ui.language = en
guifork = True
fontcomment = Cantarell,11,-1,5,50,0,0,0,0,0,Regular
fontdiff = Source Code Pro,11,-1,5,25,0,0,0,0,0,Light
fontlog = Cantarell,12,-1,5,50,0,0,0,0,0,Regular
fontoutputlog = Fira Code,11,-1,5,25,0,0,0,0,0,Light
editor = emc
