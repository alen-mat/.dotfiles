let mapleader=" "

let &t_ut=''

if has('filetype')
	set autoindent
	filetype indent plugin on
endif

"dein Plugin manager-----------------------------
if &compatible
	set nocompatible               " Be iMproved
endif

"End dein ---------------------------------------

if has('syntax')
	syntax on
endif

if has('mouse')
	set mouse=a
endif


"set autochdir

set guicursor+=n-v-c:blinkon0

autocmd InsertEnter,InsertLeave * set cul!

"FINDING FILES
"Search through sub folders
"Tab-completion for file related tasks
set path+=**

" TAG JUMPING
" - requires ctags
" - ^] tag under cursor
" - g^] ambiguous tag
" - ^t back to tag stack
" - Not visual  
command! MakeTags !ctags -R .

"AUTOCOMPLETE
" - ^n for suggestion ^p to traverse suggestion
" - ^x^n only from current file
" - ^x^f for filenames
" - ^x^] for tags only
" - ^n autocomplete from default completion
"

au BufNewFile,BufRead *.py set tabstop=4 softtabstop=4 shiftwidth=4 expandtab smarttab autoindent 

"FILE BOWSING
" - 
"
"

let g:currentmode={
    \ 'n'  : 'Normal',
    \ 'no' : 'Normal·Operator Pending',
    \ 'v'  : 'Visual',
    \ 'V'  : 'V·Line',
    \ '^V' : 'V·Block',
    \ 's'  : 'Select',
    \ 'S'  : 'S·Line',
    \ '^S' : 'S·Block',
    \ 'i'  : 'Insert',
    \ 'R'  : 'Replace',
    \ 'Rv' : 'V·Replace',
    \ 'c'  : 'Command',
    \ 'cv' : 'Vim Ex',
    \ 'ce' : 'Ex',
    \ 'r'  : 'Prompt',
    \ 'rm' : 'More',
    \ 'r?' : 'Confirm',
    \ '!'  : 'Shell',
    \ 't'  : 'Terminal'
    \}

set statusline=[%{toupper(g:currentmode[mode()])}]
set statusline+=\ 
set statusline+=%r
set statusline+=%f
set statusline+=%m
set statusline+=%=
set statusline+=%y
set statusline+=%l
set statusline+=/
set statusline+=%L


"SNIPPETS
" noremap ,html : -lread <__FILE__><CR>3jwf>a
" - <CR> carriage return code of vim
"
command FileSyn execute "vnew | r !file_sync # "
command FormatJSON execute "%!json_pp"
command FormatXML execute "%!python -c 'import sys; import xml.dom.minidom; s=sys.stdin.read(); print(xml.dom.minidom.parseString(s).toprettyxml())'"

